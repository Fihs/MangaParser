name: Release

on:
  push:
    branches:
      - Dev
      - master
  workflow_dispatch:
    inputs:
      RELEASE:
        description: "Is it a release?"
        required: true
        default: "false"
      VERSION_MAJOR:
        description: "Major version"
        required: true
        default: "1"
      VERSION_MINOR:
        description: "Minor version"
        required: true
        default: "0"
      VERSION_BUILD:
        description: "Build version"
        required: true
        default: "0"

env:
  VERSION_MAJOR: 1
  VERSION_MINOR: 0
  VERSION_BUILD: 0
  VERSION_SUFFIX: ""
  VERSION_REV: 0
  BRANCH_NAME: ""

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Set suffix to -rc
        if: endsWith(github.ref, '/master') && github.event.inputs.RELEASE == 'false'
        run: |
          echo "::set-env name=VERSION_SUFFIX::-rc"
      - name: Set suffix to -beta
        if: endsWith(github.ref, '/Dev')
        run: |
          echo "::set-env name=VERSION_SUFFIX::-beta"
      - name: Set suffix to alpha
        if: (!endsWith(github.ref, '/master')) && (!endsWith(github.ref, '/Dev'))
        run: |
          echo "::set-env name=VERSION_SUFFIX::-alpha"

      - name: Set env variables
        run: |
          echo "::set-env name=VERSION_MAJOR::${{github.event.inputs.VERSION_MAJOR}}"
          echo "::set-env name=VERSION_MINOR::${{github.event.inputs.VERSION_MINOR}}"
          echo "::set-env name=VERSION_BUILD::${{github.event.inputs.VERSION_BUILD}}"
          echo "::set-env name=VERSION_REV::${env:GITHUB_RUN_NUMBER}"
          echo "::set-env name=BRANCH_NAME::$(${env:GITHUB_REF} -replace 'refs/heads/', '')"

      - name: Echo variables
        run: |
          echo "Ref ${env:GITHUB_REF} branch ${{env.BRANCH_NAME}} Release ${{github.event.inputs.RELEASE}} Major ${{env.VERSION_MAJOR}} Minor ${{env.VERSION_MINOR}} Build ${{env.VERSION_BUILD}} Suffix ${{env.VERSION_SUFFIX}} Revision ${{env.VERSION_REV}}"

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'

      - name: Install dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Pack Core
        run: dotnet pack ".\src\MangaParser.Core\MangaParser.Core.csproj" --configuration Release --no-build

      - name: Pack Parsers
        run: dotnet pack ".\src\MangaParser.Parsers\MangaParser.Parsers.csproj" --configuration Release --no-build

      - name: Add GitHub Source
        run: dotnet nuget add source https://nuget.pkg.github.com/Fihs/index.json -n github -u Fihs -p ${{secrets.GITHUB_TOKEN}}

      - name: Push to GitHub Packages
        run: dotnet nuget push "**.nupkg" --source "github"
